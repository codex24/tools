#!/bin/bash
# permscan: scan file system and report submerged permissive files

# Init
NOW=$(date "+%Y%m%d:%H%M%S")
THIS=$(readlink -e $0)
HERE=${THIS%/*}
while getopts "hd:" opt; do
	case $opt in
		d)
			depth=$OPTARG ;;
		h)
			echo "permscan [-d N]" >&2
			exit 1 ;;
		*)
			echo "Invalid option: -$OPTARG" >&2 ;;
	esac
done
depth=${depth:-2}	# default depth value if not set by parm, 2 => /x/y

# Check for sudo access: am root or in sudo group?
if [[ $(id -u 2>/dev/null 1>&2) -eq 0 \
   || $(id -Gn 2>/dev/null 1>&2 | grep -q sudo) ]]
then
	echo "permscan has sudo access at $NOW." >&2
else {
	echo "permscan needs sudo access." >&2
	exit 2
} fi

# Initial scan of full file system
echo "permscan initial scan:" >&2
rm -f /tmp/permscan-init-*.csv 2>/dev/null	# housekeeping
sudo find -L / \( \
	-path /dev -o \
	-path /proc -o \
	-path /run -o \
	-path /sys -o \
	-path /tmp -o \
	-path "*/.Private" \
\) -prune -o -print0 2>/dev/null \
| sudo xargs -0 stat -Lc "%a;%n;%F;%U;%G;%s;%y" \
>/tmp/permscan-init-$NOW.csv 2>/dev/null

# Post-process scan for permission propogation and output
echo "permscan postprocessing (depth ${depth}):" >&2
awk -v depth=${depth} -f ${HERE}/permscan.awk /tmp/permscan-init-${NOW}.csv \
| LC_ALL=C sort -st';' -k5 >/tmp/permscan-${NOW}.csv \
&& ( echo "Created: /tmp/permscan-${NOW}.csv" >&2; \
if [[ ! -t 1 ]]; then echo "/tmp/permscan-${NOW}.csv"; fi) \
|| echo "Not created: /tmp/permscan-${NOW}.csv ($?)" 

#eof
